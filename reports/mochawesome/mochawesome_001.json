{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2025-06-03T13:28:37.464Z",
    "end": "2025-06-03T13:28:38.226Z",
    "duration": 762,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5ea9943c-399f-4cab-bbb9-c9303cce9fea",
      "title": "",
      "fullFile": "cypress/e2e/pets/get-pet.cy.js",
      "file": "cypress/e2e/pets/get-pet.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4eb98b8b-95f5-4ea2-93f8-369b3ac9d5b7",
          "title": "Pet API - Get Pet",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "[PET-001] should retrieve a pet by ID",
              "fullTitle": "Pet API - Get Pet [PET-001] should retrieve a pet by ID",
              "timedOut": null,
              "duration": 81,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.api({\n  method: \"GET\",\n  url: `/pet/${this.petId}`\n}).then(response => {\n  cy.log(JSON.stringify(response.body));\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property(\"id\", this.petId);\n});",
              "err": {},
              "uuid": "813a6729-46b7-470e-b044-fc913e00eb5f",
              "parentUUID": "4eb98b8b-95f5-4ea2-93f8-369b3ac9d5b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[PET-002] should retrieve a pet By Status",
              "fullTitle": "Pet API - Get Pet [PET-002] should retrieve a pet By Status",
              "timedOut": null,
              "duration": 343,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.api({\n  method: \"GET\",\n  url: `/pet/findByStatus?status=${this.petStatus}`\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.be.an(\"array\");\n  response.body.forEach(pet => {\n    expect(pet).to.have.property(\"status\", this.petStatus);\n  });\n});",
              "err": {},
              "uuid": "ffc062e1-5bbf-484a-b64c-e8bc3072dd44",
              "parentUUID": "4eb98b8b-95f5-4ea2-93f8-369b3ac9d5b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[PET-003] should retrive a pet By Tags",
              "fullTitle": "Pet API - Get Pet [PET-003] should retrive a pet By Tags",
              "timedOut": null,
              "duration": 63,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const petTags = \"\";\ncy.api({\n  method: \"GET\",\n  url: \"/pet/findByTags?tags=white and black\"\n}).then(response => {\n  expect(response.status).to.eq(200);\n  cy.log(JSON.stringify(response.body));\n});",
              "err": {},
              "uuid": "32e7821d-502e-44fa-9a4c-bd06eddab93b",
              "parentUUID": "4eb98b8b-95f5-4ea2-93f8-369b3ac9d5b7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "813a6729-46b7-470e-b044-fc913e00eb5f",
            "ffc062e1-5bbf-484a-b64c-e8bc3072dd44",
            "32e7821d-502e-44fa-9a4c-bd06eddab93b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 487,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": true,
        "reportDir": "reports/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}